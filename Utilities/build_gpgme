#!/bin/bash

PREFIX="${TARGET_BUILD_DIR}/../dist"
SOURCES="${TARGET_BUILD_DIR}/../sources"

GETTEXT_VERSION="0.18.1.1"
LIBGPG_ERROR_VERSION="1.8"
LIBASSUAN_VERSION="2.0.0"
GPGME_VERSION="1.3.0"



# Download the source code and unpack it.
function fetch {
	url=$1
	file=$(basename $url)
	dir=$2
	
	if [ ! -f "$file" ]; then
	
	    curl -O $url
	    
	fi

    if [ ! -d "$dir" ]; then
        
        if [ "$(echo $file | awk -F . '{print $NF}')" == "gz" ]; then
    	    tar xzf $file
        else
    	    tar xjf $file
        fi
    fi
}

# Build the library.
function build_gettext {
    # Only build if the binary doesn't exist already.
    if [ ! -f "$PREFIX/bin/gettext" ]; then
        version=$1-$2
    	fetch "http://ftp.gnu.org/gnu/gettext/${version}.tar.gz" $1
	
    	pushd "$version" 1> /dev/null
	
    	CFLAGS="-isysroot /Developer/SDKs/MacOSX10.6.sdk -arch x86_64 -arch i386" \
            ./configure --prefix="$PREFIX" --disable-shared --disable-dependency-tracking \
            --disable-java --disable-native-java --disable-csharp \
            --with-included-gettext --with-included-glib \
            --with-included-libcroco --with-included-libxml --disable-libasprintf \
            1> /dev/null
    
        make install 1> /dev/null
    
        popd 1> /dev/null
    fi
}

function build_libgpg_error {
    # Only build if the binary doesn't exist already.
    if [ ! -f "$PREFIX/bin/gpg-error-config" ]; then
        version=$1-$2
        fetch "ftp://ftp.gnupg.org/gcrypt/libgpg-error/$version.tar.bz2" $1
    
        pushd "$version" 1> /dev/null
    
        CFLAGS="-isysroot /Developer/SDKs/MacOSX10.6.sdk -arch x86_64 -arch i386" \
        LDFLAGS="-framework CoreFoundation" \
        ./configure --prefix="$PREFIX" --disable-shared --disable-dependency-tracking \
        --with-libintl-prefix="$PREFIX" 1> /dev/null
    
        make install 1> /dev/null
    
        popd 1> /dev/null
    fi
}

function build_libassuan {
    # Only build if the binary doesn't exist already.
    if [ ! -f "$PREFIX/bin/libassuan-config" ]; then
        version=$1-$2
        fetch "ftp://ftp.gnupg.org/gcrypt/libassuan/$version.tar.bz2" $1
    
        pushd "$version" 1> /dev/null
    
        CFLAGS="-isysroot /Developer/SDKs/MacOSX10.6.sdk -arch x86_64 -arch i386" \
        ./configure --prefix="$PREFIX" --disable-shared --disable-dependency-tracking \
        --with-gpg-error-prefix="$PREFIX" 1> /dev/null
    
        make install 1> /dev/null
    
        popd 1> /dev/null
    fi
}

function build_gpgme {
    # Only build if the binary doesn't exist already.
    if [ ! -f "$PREFIX/bin/gpgme-config" ]; then
        version=$1-$2
        fetch "ftp://ftp.gnupg.org/gcrypt/gpgme/$version.tar.bz2" $1
    
        pushd "$version" 1> /dev/null
    
        CFLAGS="-isysroot /Developer/SDKs/MacOSX10.6.sdk -arch x86_64 -arch i386" \
        ./configure --prefix="$PREFIX" --enable-static --disable-shared \
        --disable-dependency-tracking --with-gpg-error-prefix="$PREFIX" \
        --with-gpg="$PREFIX/bin/gpg" --with-libassuan-prefix="$PREFIX" \
        --without-pth --disable-glibtest 1> /dev/null
    
        make install 1> /dev/null
    
        popd 1> /dev/null
    fi
}

function build {
    build_gettext ${GETTEXT_VERSION}
    build_libgpg_error ${LIBGPG_ERROR_VERSION}
    build_libassuan ${LIBASSUAN_VERSION}
    build_gpgme ${GPGME_VERSION}
}

function clean {
    dir=$1-$2
    pushd "$SOURCES/$dir"
    
    make clean
    make uninstall
    
    popd
    
    rm -rf "$SOURCES/$dir"
}

action=$1
library=$2
version=$3

mkdir -p "$SOURCES"
pushd "$SOURCES" 1> /dev/null

if [ "$action" == "clean" ]; then
    clean $library $version;
else
    case "$library" in
        gettext)
            build_gettext $library $version;;
    
        libgpg-error) 
            build_libgpg_error $library $version;;
    
        libassuan)
            build_libassuan $library $version;;
    
        gpgme)
            build_gpgme $library $version;;
    
        *) build;;
    esac

fi

popd 1> /dev/null